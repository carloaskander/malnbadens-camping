import { createClient } from '@supabase/supabase-js';
import OpenAI from 'openai';
import dotenv from 'dotenv';

dotenv.config();

const supabase = createClient(
  process.env.SUPABASE_URL,
  process.env.SUPABASE_SERVICE_ROLE_KEY
);

const openai = new OpenAI({
  apiKey: process.env.OPENAI_API_KEY,
});

const REAL_FAQ_DATA = [
  {
    question: "Hur l√•ngt √§r det fr√•n campingen till stranden?",
    answer: "Cirka 150 meter till Malnbadens sandstrand."
  },
  {
    question: "Finns det restaurang vid stranden?",
    answer: "Ja, strandrestaurangen Maln Hav & Krog ligger precis vid stranden och √§r k√§nd f√∂r god mat, evenemang och havsutsikt."
  },
  {
    question: "Har stranden ett omr√•de f√∂r hundar?",
    answer: "Ja, det finns ett s√§rskilt avsnitt d√§r hundar √§r v√§lkomna att bada och leka."
  },
  {
    question: "Vilka aktiviteter finns vid motionssp√•ret?",
    answer: "Flera l√∂p- och promenadrundor, banor f√∂r rullskidor/rullskridskor samt en dirt-jump-bana f√∂r cykel."
  },
  {
    question: "Hur m√•nga campingplatser finns det och hur stora √§r de?",
    answer: "125 platser p√• 90‚Äì110 m¬≤; 99 % har el."
  },
  {
    question: "Vilka bekv√§mligheter ing√•r p√• campingplatserna?",
    answer: "El, wifi, latrin- och gr√•vattent√∂mning, servicehus med dusch, bastu, sk√∂trum, k√∂k, gemensam grill, utomhusmatplats, diskrum och dricksvatten."
  },
  {
    question: "Kan jag √∂nska en specifik campingplats?",
    answer: "Ja, ange g√§rna √∂nskem√•l vid bokning; vi f√∂rs√∂ker tillm√∂tesg√• dem men kan inte garantera."
  },
  {
    question: "Hur m√•nga stugor finns det och hur stora √§r de?",
    answer: "Nio stugor p√• 16 m¬≤ med 2‚Äì4 b√§ddar; extra madrass kan ordnas."
  },
  {
    question: "Har stugorna eget badrum?",
    answer: "Nej, WC, dusch, bastu och sk√∂trum finns i servicehuset intill."
  },
  {
    question: "Vilka bekv√§mligheter finns i stugorna?",
    answer: "Wifi, LCD-TV, egen uteplats samt ett enkelt k√∂k; dessutom tillg√•ng till ett st√∂rre gemensamt k√∂k."
  },
  {
    question: "Hur m√•nga rum finns i vandrarhemmet?",
    answer: "15 rum varav 12 enkel-/dubbelrum; g√§ster delar tv√• badrum och tv√• k√∂k."
  },
  {
    question: "Erbjuder vandrarhemmet tv√§ttm√∂jligheter?",
    answer: "Ja, gratis tv√§ttmaskin och torksk√•p ing√•r."
  },
  {
    question: "Hur l√•ngt √§r vandrarhemmet fr√•n Hudiksvalls centrum?",
    answer: "Cirka 4 km; bra bussf√∂rbindelser finns."
  },
  {
    question: "Vilken √§r turists√§songen f√∂r camping och stugor?",
    answer: "Fr√•n mitten av maj till slutet av september."
  },
  {
    question: "√Ñr vandrarhemmet √∂ppet √•ret runt?",
    answer: "Ja, f√∂r f√∂retags- och l√•ngtidsbokningar."
  },
  {
    question: "Hur kontaktar jag campingen?",
    answer: "Telefon 0650-132 60 eller e-post info@malnbadenscamping.se. Adress: Malnv√§gen 34, 824 56 Hudiksvall."
  },
  {
    question: "Vad √§r tyst tid p√• campingen?",
    answer: "Mellan 23:00 och 07:00 ska det vara lugnt p√• omr√•det."
  },
  {
    question: "F√•r jag ta med hund till campingen?",
    answer: "Ja, husdjur √§r v√§lkomna p√• campingtomterna och har √§ven ett eget hundavsnitt p√• stranden."
  },
  {
    question: "F√•r man ha husdjur i stugorna?",
    answer: "Kontakta receptionen f√∂rst ‚Äì vissa stugor kan till√•ta husdjur beroende p√• bel√§ggning och st√§drutin."
  },
  {
    question: "Var f√•r jag grilla?",
    answer: "Anv√§nd helst den gemensamma grillplatsen vid servicehuset. B√§rbar grill f√•r inte st√• direkt p√• gr√§set ‚Äì st√§ll den p√• v√§gen eller annan h√•rd yta f√∂r att undvika br√§nnskador."
  },
  {
    question: "√Ñr det till√•tet med eldkorg eller √∂ppen eld?",
    answer: "Endast p√• anvisad grillplats; √∂ppen eld p√• marken √§r inte till√•ten av brands√§kerhetssk√§l."
  },
  {
    question: "Har ni bokningsbar bastu?",
    answer: "Bastun √§r normalt redan uppv√§rmd som drop-in: en f√∂r dam- och en f√∂r herrdelen i servicehuset. Ingen f√∂rbokning kr√§vs; fr√•ga personalen om status."
  },
  {
    question: "Kan jag ladda elbilen?",
    answer: "Om du hyr en el-plats f√•r du anv√§nda dess uttag f√∂r bilen. Vill du bara ladda p√• annan plats eller om du inte bor p√• campingen, kontakta receptionen. Laddning utanf√∂r egen plats kan ibland erbjudas under l√•gs√§song mot avgift men garanteras inte."
  },
  {
    question: "Hyr ni ut cyklar?",
    answer: "Ja, heldagsuthyrning finns. Pris cirka 100‚Äì150 kr/dag ‚Äì fr√•ga i receptionen f√∂r exakt belopp och tillg√§nglighet."
  },
  {
    question: "Finns kajaker att hyra?",
    answer: "Ja, kajakuthyrning erbjuds ‚Äì boka i receptionen."
  },
  {
    question: "N√§r √§r receptionen √∂ppen?",
    answer: "Se alltid /sv/opening-hours f√∂r aktuella tider. Under h√∂gs√§song √§r receptionen normalt √∂ppen 08‚Äì21."
  },
  {
    question: "Vilka tider √§r minigolfbanan √∂ppen?",
    answer: "Se /sv/opening-hours f√∂r minigolfens aktuella √∂ppettider."
  },
  {
    question: "Var hittar jag aktuella priser f√∂r campingplatser?",
    answer: "Se /sv/accommodation/camping f√∂r dagsaktuell prislista."
  },
  {
    question: "Var hittar jag aktuella priser f√∂r stugor?",
    answer: "Se /sv/accommodation/cottages f√∂r aktuella stugpriser."
  },
  {
    question: "Var hittar jag priser f√∂r vandrarhemmet?",
    answer: "Se /sv/accommodation/hostel f√∂r priser och l√•ngtidspaket."
  }
];

async function generateEmbedding(text) {
  try {
    const response = await openai.embeddings.create({
      model: 'text-embedding-3-small',
      input: text,
    });
    return response.data[0].embedding;
  } catch (error) {
    console.error('Error generating embedding:', error);
    throw error;
  }
}

async function clearExistingFAQs() {
  console.log('üßπ Clearing existing FAQ data...');
  try {
    const { error } = await supabase
      .from('faq')
      .delete()
      .neq('id', '00000000-0000-0000-0000-000000000000'); // Delete all except impossible UUID
    
    if (error) {
      console.error('Error clearing FAQ data:', error);
    } else {
      console.log('‚úÖ Cleared existing FAQ data');
    }
  } catch (error) {
    console.error('Error clearing FAQ data:', error);
  }
}

async function seedRealFAQs() {
  console.log('üå± Starting REAL FAQ seeding with 30 professional Q&As...');
  
  // Clear existing data
  await clearExistingFAQs();
  
  console.log(`üìù Processing ${REAL_FAQ_DATA.length} real FAQ entries...`);
  
  let successCount = 0;
  
  for (let i = 0; i < REAL_FAQ_DATA.length; i++) {
    const faq = REAL_FAQ_DATA[i];
    console.log(`\n${i + 1}/${REAL_FAQ_DATA.length}: "${faq.question.substring(0, 50)}..."`);
    
    try {
      // Generate embedding for the question
      const embedding = await generateEmbedding(faq.question);
      
      // Insert FAQ with embedding
      const { error } = await supabase
        .from('faq')
        .insert([
          {
            question: faq.question,
            answer: faq.answer,
            embedding: embedding
          }
        ]);
      
      if (error) {
        console.error(`‚ùå Error inserting FAQ ${i + 1}:`, error);
      } else {
        console.log(`‚úÖ Inserted successfully`);
        successCount++;
      }
      
      // Small delay to avoid rate limiting
      await new Promise(resolve => setTimeout(resolve, 100));
      
    } catch (error) {
      console.error(`‚ùå Error processing FAQ ${i + 1}:`, error);
    }
  }
  
  // Verify the seeded data
  console.log('\nüîç Verifying seeded data...');
  const { data, error } = await supabase
    .from('faq')
    .select('question, answer')
    .limit(5);
  
  if (error) {
    console.error('Error verifying data:', error);
  } else {
    console.log(`‚úÖ Successfully seeded ${successCount}/${REAL_FAQ_DATA.length} real FAQ entries!`);
    console.log(`üìä Total entries in database: ${data?.length || 0}`);
    
    if (data && data.length > 0) {
      console.log('\nüìã Sample entries:');
      data.forEach((faq, index) => {
        console.log(`${index + 1}. Q: ${faq.question}`);
        console.log(`   A: ${faq.answer.substring(0, 60)}...`);
      });
    }
  }
  
  console.log('\nüéâ REAL FAQ seeding completed!');
  console.log('\nüß™ Now test these REAL questions in your chatbot:');
  console.log('‚úÖ "Hur l√•ngt √§r det fr√•n campingen till stranden?"');
  console.log('‚úÖ "Finns det restaurang vid stranden?"');
  console.log('‚úÖ "Kan jag ladda elbilen?"');
  console.log('‚úÖ "Hyr ni ut cyklar?"');
  console.log('‚úÖ "Vad √§r tyst tid p√• campingen?"');
  console.log('\nüéØ You should now see "S√§ker" confidence for exact matches with REAL camping info!');
}

// Run the seeding
seedRealFAQs().catch(console.error); 